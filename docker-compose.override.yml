# overrides for dev, applied when running docker-compose up.
# traefik still runs in dev, the services just have their ports exposed and bypass it
# TODO: restructure compose files so the reverse proxy/traefik stuff doesn't run in dev env

name: ff-dev

services:
    couchdb:
        ports:
            - 5984:5984
        environment:
            COUCHDB_USER: admin
            COUCHDB_PASSWORD: password 
            
    api:
        command: [ "npm", "run", "dev" ]
        ports:
            - 3000:3000
        environment:
            NODE_ENV: development
            FRONTEND_URL: 'http://localhost:8100'
        volumes:
            # TODO: docker now supports watch syntax to copy over local files when changed or rebuild, supports ignores. Similar functionality to bind mounts. Looks cool.
            # --would be smart enough to recognize that a rebuild is needed when package.json changes, for example.
            - ./server:/usr/src/app #completely replaces whatever the image has in /usr/src/app
            # It's more than slightly insane to use symlinks in WSL, mounts inside container, and file copying for built image...
            # Could try moving build context to parent dir and excluding app files from copy so symlinks work inside container.
            # For production, code is copied into image during build.
        depends_on:
            - mailhog
        secrets: #need this so the override secrets are used instead of parent secrets
            - couch_password
            - couch_replicator_password
        #labels:
        #- "traefik.http.routers.api.rule=Host(`api.docker.localhost`)"

    ##ionic:
        ##build: app/
        ## not sure if need volumes, but what ports in container to map?

    mailhog: # on dev, couchauth+nodemailer registration emails caught by mailhog. View them at http://localhost:8025/#
        image: mailhog/mailhog
        ports:
            - 1025:1025 # smtp server
            - 8025:8025 # web ui
        networks:
            - backend
        logging:
            driver: 'none'  # disable saving logs, mailhog's way too chatty
        environment:
            MH_STORAGE: maildir
            MH_MAILDIR_PATH: /home/mailhog
        volumes:
            - mail_storage:/home/mailhog


volumes:
    mail_storage:

secrets: # users are shared, passwords are different. 
    couch_password:
        file: ./secrets/couch_password_dev.txt
    couch_replicator_password:
        file: ./secrets/couch_replicator_password_dev.txt
