"use strict";module.exports = validate20;module.exports.default = validate20;const schema22 = {"$schema":"http://json-schema.org/draft-07/schema#","definitions":{"Add<MoveData>":{"properties":{"new":{"$ref":"#/definitions/MoveData"},"type":{"enum":["add"],"type":"string"}},"required":["new","type"],"type":"object"},"Add<PropData>":{"properties":{"new":{"$ref":"#/definitions/PropData"},"type":{"enum":["add"],"type":"string"}},"required":["new","type"],"type":"object"},"Add<string>":{"properties":{"new":{"type":"string"},"type":{"enum":["add"],"type":"string"}},"required":["new","type"],"type":"object"},"Delete<MoveData>":{"properties":{"old":{"$ref":"#/definitions/MoveData"},"type":{"enum":["delete"],"type":"string"}},"required":["old","type"],"type":"object"},"Delete<PropData>":{"properties":{"old":{"$ref":"#/definitions/PropData"},"type":{"enum":["delete"],"type":"string"}},"required":["old","type"],"type":"object"},"Delete<string>":{"properties":{"old":{"type":"string"},"type":{"enum":["delete"],"type":"string"}},"required":["old","type"],"type":"object"},"Modify<MoveData>":{"properties":{"new":{"$ref":"#/definitions/MoveData"},"old":{"$ref":"#/definitions/MoveData"},"type":{"enum":["modify"],"type":"string"}},"required":["new","old","type"],"type":"object"},"Modify<MoveOrder[]>":{"properties":{"new":{"items":{"$ref":"#/definitions/MoveOrder"},"type":"array"},"old":{"items":{"$ref":"#/definitions/MoveOrder"},"type":"array"},"type":{"enum":["modify"],"type":"string"}},"required":["new","old","type"],"type":"object"},"Modify<PropData>":{"properties":{"new":{"$ref":"#/definitions/PropData"},"old":{"$ref":"#/definitions/PropData"},"type":{"enum":["modify"],"type":"string"}},"required":["new","old","type"],"type":"object"},"MoveChanges":{"additionalProperties":{"anyOf":[{"$ref":"#/definitions/Modify<MoveData>"},{"$ref":"#/definitions/Add<MoveData>"},{"$ref":"#/definitions/Delete<MoveData>"}]},"properties":{"moveName":{"anyOf":[{"$ref":"#/definitions/Add<string>"},{"$ref":"#/definitions/Delete<string>"}]},"moveOrder":false},"type":"object"},"MoveData":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":["string","number"]}]},"MoveOrder":{"properties":{"indent":{"type":"number"},"isCategory":{"enum":[true],"type":"boolean"},"name":{"type":"string"}},"required":["name"],"type":"object"},"PropChanges":{"additionalProperties":{"anyOf":[{"$ref":"#/definitions/Modify<PropData>"},{"$ref":"#/definitions/Add<PropData>"},{"$ref":"#/definitions/Delete<PropData>"}]},"properties":{"moveName":false,"moveOrder":{"$ref":"#/definitions/Modify<MoveOrder[]>"}},"type":"object"},"PropData":{"anyOf":[{"items":{"type":"string"},"type":"array"},{"items":{"$ref":"#/definitions/MoveOrder"},"type":"array"},{"type":["string","number"]}]}},"properties":{"baseRevision":{"type":"string"},"createdAt":{"type":"string"},"createdBy":{"type":"string"},"moveChanges":{"additionalProperties":{"$ref":"#/definitions/MoveChanges"},"type":"object"},"previousChange":{"type":"string"},"universalPropChanges":{"$ref":"#/definitions/PropChanges"},"updateDescription":{"type":"string"},"updateTitle":{"type":"string"},"updateVersion":{"type":"string"}},"required":["baseRevision","createdAt","createdBy","updateTitle"],"type":"object"};const schema23 = {"additionalProperties":{"anyOf":[{"$ref":"#/definitions/Modify<MoveData>"},{"$ref":"#/definitions/Add<MoveData>"},{"$ref":"#/definitions/Delete<MoveData>"}]},"properties":{"moveName":{"anyOf":[{"$ref":"#/definitions/Add<string>"},{"$ref":"#/definitions/Delete<string>"}]},"moveOrder":false},"type":"object"};const schema31 = {"properties":{"new":{"type":"string"},"type":{"enum":["add"],"type":"string"}},"required":["new","type"],"type":"object"};const schema32 = {"properties":{"old":{"type":"string"},"type":{"enum":["delete"],"type":"string"}},"required":["old","type"],"type":"object"};const schema24 = {"properties":{"new":{"$ref":"#/definitions/MoveData"},"old":{"$ref":"#/definitions/MoveData"},"type":{"enum":["modify"],"type":"string"}},"required":["new","old","type"],"type":"object"};const schema25 = {"anyOf":[{"items":{"type":"string"},"type":"array"},{"type":["string","number"]}]};function validate22(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.new === undefined) && (missing0 = "new")) || ((data.old === undefined) && (missing0 = "old"))) || ((data.type === undefined) && (missing0 = "type"))){validate22.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.new !== undefined){let data0 = data.new;const _errs1 = errors;const _errs3 = errors;let valid2 = false;const _errs4 = errors;if(errors === _errs4){if(Array.isArray(data0)){var valid3 = true;const len0 = data0.length;for(let i0=0; i0<len0; i0++){const _errs6 = errors;if(typeof data0[i0] !== "string"){const err0 = {instancePath:instancePath+"/new/" + i0,schemaPath:"#/definitions/MoveData/anyOf/0/items/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}var valid3 = _errs6 === errors;if(!valid3){break;}}}else {const err1 = {instancePath:instancePath+"/new",schemaPath:"#/definitions/MoveData/anyOf/0/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}}var _valid0 = _errs4 === errors;valid2 = valid2 || _valid0;if(!valid2){const _errs8 = errors;if((typeof data0 !== "string") && (!((typeof data0 == "number") && (isFinite(data0))))){const err2 = {instancePath:instancePath+"/new",schemaPath:"#/definitions/MoveData/anyOf/1/type",keyword:"type",params:{type: schema25.anyOf[1].type},message:"must be string,number"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}var _valid0 = _errs8 === errors;valid2 = valid2 || _valid0;}if(!valid2){const err3 = {instancePath:instancePath+"/new",schemaPath:"#/definitions/MoveData/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;validate22.errors = vErrors;return false;}else {errors = _errs3;if(vErrors !== null){if(_errs3){vErrors.length = _errs3;}else {vErrors = null;}}}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.old !== undefined){let data2 = data.old;const _errs10 = errors;const _errs12 = errors;let valid5 = false;const _errs13 = errors;if(errors === _errs13){if(Array.isArray(data2)){var valid6 = true;const len1 = data2.length;for(let i1=0; i1<len1; i1++){const _errs15 = errors;if(typeof data2[i1] !== "string"){const err4 = {instancePath:instancePath+"/old/" + i1,schemaPath:"#/definitions/MoveData/anyOf/0/items/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err4];}else {vErrors.push(err4);}errors++;}var valid6 = _errs15 === errors;if(!valid6){break;}}}else {const err5 = {instancePath:instancePath+"/old",schemaPath:"#/definitions/MoveData/anyOf/0/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err5];}else {vErrors.push(err5);}errors++;}}var _valid1 = _errs13 === errors;valid5 = valid5 || _valid1;if(!valid5){const _errs17 = errors;if((typeof data2 !== "string") && (!((typeof data2 == "number") && (isFinite(data2))))){const err6 = {instancePath:instancePath+"/old",schemaPath:"#/definitions/MoveData/anyOf/1/type",keyword:"type",params:{type: schema25.anyOf[1].type},message:"must be string,number"};if(vErrors === null){vErrors = [err6];}else {vErrors.push(err6);}errors++;}var _valid1 = _errs17 === errors;valid5 = valid5 || _valid1;}if(!valid5){const err7 = {instancePath:instancePath+"/old",schemaPath:"#/definitions/MoveData/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};if(vErrors === null){vErrors = [err7];}else {vErrors.push(err7);}errors++;validate22.errors = vErrors;return false;}else {errors = _errs12;if(vErrors !== null){if(_errs12){vErrors.length = _errs12;}else {vErrors = null;}}}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.type !== undefined){let data4 = data.type;const _errs19 = errors;if(typeof data4 !== "string"){validate22.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(data4 === "modify")){validate22.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/enum",keyword:"enum",params:{allowedValues: schema24.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs19 === errors;}else {var valid0 = true;}}}}}else {validate22.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate22.errors = vErrors;return errors === 0;}const schema27 = {"properties":{"new":{"$ref":"#/definitions/MoveData"},"type":{"enum":["add"],"type":"string"}},"required":["new","type"],"type":"object"};function validate24(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.new === undefined) && (missing0 = "new")) || ((data.type === undefined) && (missing0 = "type"))){validate24.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.new !== undefined){let data0 = data.new;const _errs1 = errors;const _errs3 = errors;let valid2 = false;const _errs4 = errors;if(errors === _errs4){if(Array.isArray(data0)){var valid3 = true;const len0 = data0.length;for(let i0=0; i0<len0; i0++){const _errs6 = errors;if(typeof data0[i0] !== "string"){const err0 = {instancePath:instancePath+"/new/" + i0,schemaPath:"#/definitions/MoveData/anyOf/0/items/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}var valid3 = _errs6 === errors;if(!valid3){break;}}}else {const err1 = {instancePath:instancePath+"/new",schemaPath:"#/definitions/MoveData/anyOf/0/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}}var _valid0 = _errs4 === errors;valid2 = valid2 || _valid0;if(!valid2){const _errs8 = errors;if((typeof data0 !== "string") && (!((typeof data0 == "number") && (isFinite(data0))))){const err2 = {instancePath:instancePath+"/new",schemaPath:"#/definitions/MoveData/anyOf/1/type",keyword:"type",params:{type: schema25.anyOf[1].type},message:"must be string,number"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}var _valid0 = _errs8 === errors;valid2 = valid2 || _valid0;}if(!valid2){const err3 = {instancePath:instancePath+"/new",schemaPath:"#/definitions/MoveData/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;validate24.errors = vErrors;return false;}else {errors = _errs3;if(vErrors !== null){if(_errs3){vErrors.length = _errs3;}else {vErrors = null;}}}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.type !== undefined){let data2 = data.type;const _errs10 = errors;if(typeof data2 !== "string"){validate24.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(data2 === "add")){validate24.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/enum",keyword:"enum",params:{allowedValues: schema27.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs10 === errors;}else {var valid0 = true;}}}}else {validate24.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate24.errors = vErrors;return errors === 0;}const schema29 = {"properties":{"old":{"$ref":"#/definitions/MoveData"},"type":{"enum":["delete"],"type":"string"}},"required":["old","type"],"type":"object"};function validate26(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.old === undefined) && (missing0 = "old")) || ((data.type === undefined) && (missing0 = "type"))){validate26.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.old !== undefined){let data0 = data.old;const _errs1 = errors;const _errs3 = errors;let valid2 = false;const _errs4 = errors;if(errors === _errs4){if(Array.isArray(data0)){var valid3 = true;const len0 = data0.length;for(let i0=0; i0<len0; i0++){const _errs6 = errors;if(typeof data0[i0] !== "string"){const err0 = {instancePath:instancePath+"/old/" + i0,schemaPath:"#/definitions/MoveData/anyOf/0/items/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}var valid3 = _errs6 === errors;if(!valid3){break;}}}else {const err1 = {instancePath:instancePath+"/old",schemaPath:"#/definitions/MoveData/anyOf/0/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}}var _valid0 = _errs4 === errors;valid2 = valid2 || _valid0;if(!valid2){const _errs8 = errors;if((typeof data0 !== "string") && (!((typeof data0 == "number") && (isFinite(data0))))){const err2 = {instancePath:instancePath+"/old",schemaPath:"#/definitions/MoveData/anyOf/1/type",keyword:"type",params:{type: schema25.anyOf[1].type},message:"must be string,number"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}var _valid0 = _errs8 === errors;valid2 = valid2 || _valid0;}if(!valid2){const err3 = {instancePath:instancePath+"/old",schemaPath:"#/definitions/MoveData/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;validate26.errors = vErrors;return false;}else {errors = _errs3;if(vErrors !== null){if(_errs3){vErrors.length = _errs3;}else {vErrors = null;}}}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.type !== undefined){let data2 = data.type;const _errs10 = errors;if(typeof data2 !== "string"){validate26.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(data2 === "delete")){validate26.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/enum",keyword:"enum",params:{allowedValues: schema29.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs10 === errors;}else {var valid0 = true;}}}}else {validate26.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate26.errors = vErrors;return errors === 0;}function validate21(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!((key0 === "moveName") || (key0 === "moveOrder"))){let data0 = data[key0];const _errs2 = errors;const _errs3 = errors;let valid1 = false;const _errs4 = errors;if(!(validate22(data0, {instancePath:instancePath+"/" + key0.replace(/~/g, "~0").replace(/\//g, "~1"),parentData:data,parentDataProperty:key0,rootData}))){vErrors = vErrors === null ? validate22.errors : vErrors.concat(validate22.errors);errors = vErrors.length;}var _valid0 = _errs4 === errors;valid1 = valid1 || _valid0;if(!valid1){const _errs5 = errors;if(!(validate24(data0, {instancePath:instancePath+"/" + key0.replace(/~/g, "~0").replace(/\//g, "~1"),parentData:data,parentDataProperty:key0,rootData}))){vErrors = vErrors === null ? validate24.errors : vErrors.concat(validate24.errors);errors = vErrors.length;}var _valid0 = _errs5 === errors;valid1 = valid1 || _valid0;if(!valid1){const _errs6 = errors;if(!(validate26(data0, {instancePath:instancePath+"/" + key0.replace(/~/g, "~0").replace(/\//g, "~1"),parentData:data,parentDataProperty:key0,rootData}))){vErrors = vErrors === null ? validate26.errors : vErrors.concat(validate26.errors);errors = vErrors.length;}var _valid0 = _errs6 === errors;valid1 = valid1 || _valid0;}}if(!valid1){const err0 = {instancePath:instancePath+"/" + key0.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/additionalProperties/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;validate21.errors = vErrors;return false;}else {errors = _errs3;if(vErrors !== null){if(_errs3){vErrors.length = _errs3;}else {vErrors = null;}}}var valid0 = _errs2 === errors;if(!valid0){break;}}}if(_errs1 === errors){if(data.moveName !== undefined){let data1 = data.moveName;const _errs7 = errors;const _errs8 = errors;let valid3 = false;const _errs9 = errors;const _errs10 = errors;if(errors === _errs10){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){let missing0;if(((data1.new === undefined) && (missing0 = "new")) || ((data1.type === undefined) && (missing0 = "type"))){const err1 = {instancePath:instancePath+"/moveName",schemaPath:"#/definitions/Add<string>/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}else {if(data1.new !== undefined){const _errs12 = errors;if(typeof data1.new !== "string"){const err2 = {instancePath:instancePath+"/moveName/new",schemaPath:"#/definitions/Add<string>/properties/new/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}var valid5 = _errs12 === errors;}else {var valid5 = true;}if(valid5){if(data1.type !== undefined){let data3 = data1.type;const _errs14 = errors;if(typeof data3 !== "string"){const err3 = {instancePath:instancePath+"/moveName/type",schemaPath:"#/definitions/Add<string>/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;}if(!(data3 === "add")){const err4 = {instancePath:instancePath+"/moveName/type",schemaPath:"#/definitions/Add<string>/properties/type/enum",keyword:"enum",params:{allowedValues: schema31.properties.type.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err4];}else {vErrors.push(err4);}errors++;}var valid5 = _errs14 === errors;}else {var valid5 = true;}}}}else {const err5 = {instancePath:instancePath+"/moveName",schemaPath:"#/definitions/Add<string>/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err5];}else {vErrors.push(err5);}errors++;}}var _valid1 = _errs9 === errors;valid3 = valid3 || _valid1;if(!valid3){const _errs16 = errors;const _errs17 = errors;if(errors === _errs17){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){let missing1;if(((data1.old === undefined) && (missing1 = "old")) || ((data1.type === undefined) && (missing1 = "type"))){const err6 = {instancePath:instancePath+"/moveName",schemaPath:"#/definitions/Delete<string>/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"};if(vErrors === null){vErrors = [err6];}else {vErrors.push(err6);}errors++;}else {if(data1.old !== undefined){const _errs19 = errors;if(typeof data1.old !== "string"){const err7 = {instancePath:instancePath+"/moveName/old",schemaPath:"#/definitions/Delete<string>/properties/old/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err7];}else {vErrors.push(err7);}errors++;}var valid7 = _errs19 === errors;}else {var valid7 = true;}if(valid7){if(data1.type !== undefined){let data5 = data1.type;const _errs21 = errors;if(typeof data5 !== "string"){const err8 = {instancePath:instancePath+"/moveName/type",schemaPath:"#/definitions/Delete<string>/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err8];}else {vErrors.push(err8);}errors++;}if(!(data5 === "delete")){const err9 = {instancePath:instancePath+"/moveName/type",schemaPath:"#/definitions/Delete<string>/properties/type/enum",keyword:"enum",params:{allowedValues: schema32.properties.type.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err9];}else {vErrors.push(err9);}errors++;}var valid7 = _errs21 === errors;}else {var valid7 = true;}}}}else {const err10 = {instancePath:instancePath+"/moveName",schemaPath:"#/definitions/Delete<string>/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err10];}else {vErrors.push(err10);}errors++;}}var _valid1 = _errs16 === errors;valid3 = valid3 || _valid1;}if(!valid3){const err11 = {instancePath:instancePath+"/moveName",schemaPath:"#/properties/moveName/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};if(vErrors === null){vErrors = [err11];}else {vErrors.push(err11);}errors++;validate21.errors = vErrors;return false;}else {errors = _errs8;if(vErrors !== null){if(_errs8){vErrors.length = _errs8;}else {vErrors = null;}}}var valid2 = _errs7 === errors;}else {var valid2 = true;}if(valid2){if(data.moveOrder !== undefined){var valid2 = false;validate21.errors = [{instancePath:instancePath+"/moveOrder",schemaPath:"#/properties/moveOrder/false schema",keyword:"false schema",params:{},message:"boolean schema is false"}];return false;}else {var valid2 = true;}}}}else {validate21.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate21.errors = vErrors;return errors === 0;}const schema33 = {"additionalProperties":{"anyOf":[{"$ref":"#/definitions/Modify<PropData>"},{"$ref":"#/definitions/Add<PropData>"},{"$ref":"#/definitions/Delete<PropData>"}]},"properties":{"moveName":false,"moveOrder":{"$ref":"#/definitions/Modify<MoveOrder[]>"}},"type":"object"};const schema34 = {"properties":{"new":{"$ref":"#/definitions/PropData"},"old":{"$ref":"#/definitions/PropData"},"type":{"enum":["modify"],"type":"string"}},"required":["new","old","type"],"type":"object"};const schema35 = {"anyOf":[{"items":{"type":"string"},"type":"array"},{"items":{"$ref":"#/definitions/MoveOrder"},"type":"array"},{"type":["string","number"]}]};const schema36 = {"properties":{"indent":{"type":"number"},"isCategory":{"enum":[true],"type":"boolean"},"name":{"type":"string"}},"required":["name"],"type":"object"};function validate31(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;const _errs0 = errors;let valid0 = false;const _errs1 = errors;if(errors === _errs1){if(Array.isArray(data)){var valid1 = true;const len0 = data.length;for(let i0=0; i0<len0; i0++){const _errs3 = errors;if(typeof data[i0] !== "string"){const err0 = {instancePath:instancePath+"/" + i0,schemaPath:"#/anyOf/0/items/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}var valid1 = _errs3 === errors;if(!valid1){break;}}}else {const err1 = {instancePath,schemaPath:"#/anyOf/0/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}}var _valid0 = _errs1 === errors;valid0 = valid0 || _valid0;if(!valid0){const _errs5 = errors;if(errors === _errs5){if(Array.isArray(data)){var valid2 = true;const len1 = data.length;for(let i1=0; i1<len1; i1++){let data1 = data[i1];const _errs7 = errors;const _errs8 = errors;if(errors === _errs8){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){let missing0;if((data1.name === undefined) && (missing0 = "name")){const err2 = {instancePath:instancePath+"/" + i1,schemaPath:"#/definitions/MoveOrder/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}else {if(data1.indent !== undefined){let data2 = data1.indent;const _errs10 = errors;if(!((typeof data2 == "number") && (isFinite(data2)))){const err3 = {instancePath:instancePath+"/" + i1+"/indent",schemaPath:"#/definitions/MoveOrder/properties/indent/type",keyword:"type",params:{type: "number"},message:"must be number"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;}var valid4 = _errs10 === errors;}else {var valid4 = true;}if(valid4){if(data1.isCategory !== undefined){let data3 = data1.isCategory;const _errs12 = errors;if(typeof data3 !== "boolean"){const err4 = {instancePath:instancePath+"/" + i1+"/isCategory",schemaPath:"#/definitions/MoveOrder/properties/isCategory/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};if(vErrors === null){vErrors = [err4];}else {vErrors.push(err4);}errors++;}if(!(data3 === true)){const err5 = {instancePath:instancePath+"/" + i1+"/isCategory",schemaPath:"#/definitions/MoveOrder/properties/isCategory/enum",keyword:"enum",params:{allowedValues: schema36.properties.isCategory.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err5];}else {vErrors.push(err5);}errors++;}var valid4 = _errs12 === errors;}else {var valid4 = true;}if(valid4){if(data1.name !== undefined){const _errs14 = errors;if(typeof data1.name !== "string"){const err6 = {instancePath:instancePath+"/" + i1+"/name",schemaPath:"#/definitions/MoveOrder/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err6];}else {vErrors.push(err6);}errors++;}var valid4 = _errs14 === errors;}else {var valid4 = true;}}}}}else {const err7 = {instancePath:instancePath+"/" + i1,schemaPath:"#/definitions/MoveOrder/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err7];}else {vErrors.push(err7);}errors++;}}var valid2 = _errs7 === errors;if(!valid2){break;}}}else {const err8 = {instancePath,schemaPath:"#/anyOf/1/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err8];}else {vErrors.push(err8);}errors++;}}var _valid0 = _errs5 === errors;valid0 = valid0 || _valid0;if(!valid0){const _errs16 = errors;if((typeof data !== "string") && (!((typeof data == "number") && (isFinite(data))))){const err9 = {instancePath,schemaPath:"#/anyOf/2/type",keyword:"type",params:{type: schema35.anyOf[2].type},message:"must be string,number"};if(vErrors === null){vErrors = [err9];}else {vErrors.push(err9);}errors++;}var _valid0 = _errs16 === errors;valid0 = valid0 || _valid0;}}if(!valid0){const err10 = {instancePath,schemaPath:"#/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};if(vErrors === null){vErrors = [err10];}else {vErrors.push(err10);}errors++;validate31.errors = vErrors;return false;}else {errors = _errs0;if(vErrors !== null){if(_errs0){vErrors.length = _errs0;}else {vErrors = null;}}}validate31.errors = vErrors;return errors === 0;}function validate30(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.new === undefined) && (missing0 = "new")) || ((data.old === undefined) && (missing0 = "old"))) || ((data.type === undefined) && (missing0 = "type"))){validate30.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.new !== undefined){const _errs1 = errors;if(!(validate31(data.new, {instancePath:instancePath+"/new",parentData:data,parentDataProperty:"new",rootData}))){vErrors = vErrors === null ? validate31.errors : vErrors.concat(validate31.errors);errors = vErrors.length;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.old !== undefined){const _errs2 = errors;if(!(validate31(data.old, {instancePath:instancePath+"/old",parentData:data,parentDataProperty:"old",rootData}))){vErrors = vErrors === null ? validate31.errors : vErrors.concat(validate31.errors);errors = vErrors.length;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.type !== undefined){let data2 = data.type;const _errs3 = errors;if(typeof data2 !== "string"){validate30.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(data2 === "modify")){validate30.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/enum",keyword:"enum",params:{allowedValues: schema34.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}}}}}else {validate30.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate30.errors = vErrors;return errors === 0;}const schema37 = {"properties":{"new":{"$ref":"#/definitions/PropData"},"type":{"enum":["add"],"type":"string"}},"required":["new","type"],"type":"object"};function validate35(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.new === undefined) && (missing0 = "new")) || ((data.type === undefined) && (missing0 = "type"))){validate35.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.new !== undefined){const _errs1 = errors;if(!(validate31(data.new, {instancePath:instancePath+"/new",parentData:data,parentDataProperty:"new",rootData}))){vErrors = vErrors === null ? validate31.errors : vErrors.concat(validate31.errors);errors = vErrors.length;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.type !== undefined){let data1 = data.type;const _errs2 = errors;if(typeof data1 !== "string"){validate35.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(data1 === "add")){validate35.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/enum",keyword:"enum",params:{allowedValues: schema37.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}}}}else {validate35.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate35.errors = vErrors;return errors === 0;}const schema38 = {"properties":{"old":{"$ref":"#/definitions/PropData"},"type":{"enum":["delete"],"type":"string"}},"required":["old","type"],"type":"object"};function validate38(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.old === undefined) && (missing0 = "old")) || ((data.type === undefined) && (missing0 = "type"))){validate38.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.old !== undefined){const _errs1 = errors;if(!(validate31(data.old, {instancePath:instancePath+"/old",parentData:data,parentDataProperty:"old",rootData}))){vErrors = vErrors === null ? validate31.errors : vErrors.concat(validate31.errors);errors = vErrors.length;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.type !== undefined){let data1 = data.type;const _errs2 = errors;if(typeof data1 !== "string"){validate38.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(data1 === "delete")){validate38.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/enum",keyword:"enum",params:{allowedValues: schema38.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}}}}else {validate38.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate38.errors = vErrors;return errors === 0;}const schema39 = {"properties":{"new":{"items":{"$ref":"#/definitions/MoveOrder"},"type":"array"},"old":{"items":{"$ref":"#/definitions/MoveOrder"},"type":"array"},"type":{"enum":["modify"],"type":"string"}},"required":["new","old","type"],"type":"object"};function validate41(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.new === undefined) && (missing0 = "new")) || ((data.old === undefined) && (missing0 = "old"))) || ((data.type === undefined) && (missing0 = "type"))){validate41.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.new !== undefined){let data0 = data.new;const _errs1 = errors;if(errors === _errs1){if(Array.isArray(data0)){var valid1 = true;const len0 = data0.length;for(let i0=0; i0<len0; i0++){let data1 = data0[i0];const _errs3 = errors;const _errs4 = errors;if(errors === _errs4){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){let missing1;if((data1.name === undefined) && (missing1 = "name")){validate41.errors = [{instancePath:instancePath+"/new/" + i0,schemaPath:"#/definitions/MoveOrder/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data1.indent !== undefined){let data2 = data1.indent;const _errs6 = errors;if(!((typeof data2 == "number") && (isFinite(data2)))){validate41.errors = [{instancePath:instancePath+"/new/" + i0+"/indent",schemaPath:"#/definitions/MoveOrder/properties/indent/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid3 = _errs6 === errors;}else {var valid3 = true;}if(valid3){if(data1.isCategory !== undefined){let data3 = data1.isCategory;const _errs8 = errors;if(typeof data3 !== "boolean"){validate41.errors = [{instancePath:instancePath+"/new/" + i0+"/isCategory",schemaPath:"#/definitions/MoveOrder/properties/isCategory/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}if(!(data3 === true)){validate41.errors = [{instancePath:instancePath+"/new/" + i0+"/isCategory",schemaPath:"#/definitions/MoveOrder/properties/isCategory/enum",keyword:"enum",params:{allowedValues: schema36.properties.isCategory.enum},message:"must be equal to one of the allowed values"}];return false;}var valid3 = _errs8 === errors;}else {var valid3 = true;}if(valid3){if(data1.name !== undefined){const _errs10 = errors;if(typeof data1.name !== "string"){validate41.errors = [{instancePath:instancePath+"/new/" + i0+"/name",schemaPath:"#/definitions/MoveOrder/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs10 === errors;}else {var valid3 = true;}}}}}else {validate41.errors = [{instancePath:instancePath+"/new/" + i0,schemaPath:"#/definitions/MoveOrder/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs3 === errors;if(!valid1){break;}}}else {validate41.errors = [{instancePath:instancePath+"/new",schemaPath:"#/properties/new/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.old !== undefined){let data5 = data.old;const _errs12 = errors;if(errors === _errs12){if(Array.isArray(data5)){var valid4 = true;const len1 = data5.length;for(let i1=0; i1<len1; i1++){let data6 = data5[i1];const _errs14 = errors;const _errs15 = errors;if(errors === _errs15){if(data6 && typeof data6 == "object" && !Array.isArray(data6)){let missing2;if((data6.name === undefined) && (missing2 = "name")){validate41.errors = [{instancePath:instancePath+"/old/" + i1,schemaPath:"#/definitions/MoveOrder/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"}];return false;}else {if(data6.indent !== undefined){let data7 = data6.indent;const _errs17 = errors;if(!((typeof data7 == "number") && (isFinite(data7)))){validate41.errors = [{instancePath:instancePath+"/old/" + i1+"/indent",schemaPath:"#/definitions/MoveOrder/properties/indent/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid6 = _errs17 === errors;}else {var valid6 = true;}if(valid6){if(data6.isCategory !== undefined){let data8 = data6.isCategory;const _errs19 = errors;if(typeof data8 !== "boolean"){validate41.errors = [{instancePath:instancePath+"/old/" + i1+"/isCategory",schemaPath:"#/definitions/MoveOrder/properties/isCategory/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}if(!(data8 === true)){validate41.errors = [{instancePath:instancePath+"/old/" + i1+"/isCategory",schemaPath:"#/definitions/MoveOrder/properties/isCategory/enum",keyword:"enum",params:{allowedValues: schema36.properties.isCategory.enum},message:"must be equal to one of the allowed values"}];return false;}var valid6 = _errs19 === errors;}else {var valid6 = true;}if(valid6){if(data6.name !== undefined){const _errs21 = errors;if(typeof data6.name !== "string"){validate41.errors = [{instancePath:instancePath+"/old/" + i1+"/name",schemaPath:"#/definitions/MoveOrder/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs21 === errors;}else {var valid6 = true;}}}}}else {validate41.errors = [{instancePath:instancePath+"/old/" + i1,schemaPath:"#/definitions/MoveOrder/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid4 = _errs14 === errors;if(!valid4){break;}}}else {validate41.errors = [{instancePath:instancePath+"/old",schemaPath:"#/properties/old/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.type !== undefined){let data10 = data.type;const _errs23 = errors;if(typeof data10 !== "string"){validate41.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(data10 === "modify")){validate41.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/enum",keyword:"enum",params:{allowedValues: schema39.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs23 === errors;}else {var valid0 = true;}}}}}else {validate41.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate41.errors = vErrors;return errors === 0;}function validate29(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!((key0 === "moveName") || (key0 === "moveOrder"))){let data0 = data[key0];const _errs2 = errors;const _errs3 = errors;let valid1 = false;const _errs4 = errors;if(!(validate30(data0, {instancePath:instancePath+"/" + key0.replace(/~/g, "~0").replace(/\//g, "~1"),parentData:data,parentDataProperty:key0,rootData}))){vErrors = vErrors === null ? validate30.errors : vErrors.concat(validate30.errors);errors = vErrors.length;}var _valid0 = _errs4 === errors;valid1 = valid1 || _valid0;if(!valid1){const _errs5 = errors;if(!(validate35(data0, {instancePath:instancePath+"/" + key0.replace(/~/g, "~0").replace(/\//g, "~1"),parentData:data,parentDataProperty:key0,rootData}))){vErrors = vErrors === null ? validate35.errors : vErrors.concat(validate35.errors);errors = vErrors.length;}var _valid0 = _errs5 === errors;valid1 = valid1 || _valid0;if(!valid1){const _errs6 = errors;if(!(validate38(data0, {instancePath:instancePath+"/" + key0.replace(/~/g, "~0").replace(/\//g, "~1"),parentData:data,parentDataProperty:key0,rootData}))){vErrors = vErrors === null ? validate38.errors : vErrors.concat(validate38.errors);errors = vErrors.length;}var _valid0 = _errs6 === errors;valid1 = valid1 || _valid0;}}if(!valid1){const err0 = {instancePath:instancePath+"/" + key0.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/additionalProperties/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;validate29.errors = vErrors;return false;}else {errors = _errs3;if(vErrors !== null){if(_errs3){vErrors.length = _errs3;}else {vErrors = null;}}}var valid0 = _errs2 === errors;if(!valid0){break;}}}if(_errs1 === errors){if(data.moveName !== undefined){var valid2 = false;validate29.errors = [{instancePath:instancePath+"/moveName",schemaPath:"#/properties/moveName/false schema",keyword:"false schema",params:{},message:"boolean schema is false"}];return false;}else {var valid2 = true;}if(valid2){if(data.moveOrder !== undefined){const _errs7 = errors;if(!(validate41(data.moveOrder, {instancePath:instancePath+"/moveOrder",parentData:data,parentDataProperty:"moveOrder",rootData}))){vErrors = vErrors === null ? validate41.errors : vErrors.concat(validate41.errors);errors = vErrors.length;}var valid2 = _errs7 === errors;}else {var valid2 = true;}}}}else {validate29.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate29.errors = vErrors;return errors === 0;}function validate20(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((((data.baseRevision === undefined) && (missing0 = "baseRevision")) || ((data.createdAt === undefined) && (missing0 = "createdAt"))) || ((data.createdBy === undefined) && (missing0 = "createdBy"))) || ((data.updateTitle === undefined) && (missing0 = "updateTitle"))){validate20.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.baseRevision !== undefined){const _errs1 = errors;if(typeof data.baseRevision !== "string"){validate20.errors = [{instancePath:instancePath+"/baseRevision",schemaPath:"#/properties/baseRevision/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.createdAt !== undefined){const _errs3 = errors;if(typeof data.createdAt !== "string"){validate20.errors = [{instancePath:instancePath+"/createdAt",schemaPath:"#/properties/createdAt/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.createdBy !== undefined){const _errs5 = errors;if(typeof data.createdBy !== "string"){validate20.errors = [{instancePath:instancePath+"/createdBy",schemaPath:"#/properties/createdBy/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.moveChanges !== undefined){let data3 = data.moveChanges;const _errs7 = errors;if(errors === _errs7){if(data3 && typeof data3 == "object" && !Array.isArray(data3)){for(const key0 in data3){const _errs10 = errors;if(!(validate21(data3[key0], {instancePath:instancePath+"/moveChanges/" + key0.replace(/~/g, "~0").replace(/\//g, "~1"),parentData:data3,parentDataProperty:key0,rootData}))){vErrors = vErrors === null ? validate21.errors : vErrors.concat(validate21.errors);errors = vErrors.length;}var valid1 = _errs10 === errors;if(!valid1){break;}}}else {validate20.errors = [{instancePath:instancePath+"/moveChanges",schemaPath:"#/properties/moveChanges/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.previousChange !== undefined){const _errs11 = errors;if(typeof data.previousChange !== "string"){validate20.errors = [{instancePath:instancePath+"/previousChange",schemaPath:"#/properties/previousChange/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs11 === errors;}else {var valid0 = true;}if(valid0){if(data.universalPropChanges !== undefined){const _errs13 = errors;if(!(validate29(data.universalPropChanges, {instancePath:instancePath+"/universalPropChanges",parentData:data,parentDataProperty:"universalPropChanges",rootData}))){vErrors = vErrors === null ? validate29.errors : vErrors.concat(validate29.errors);errors = vErrors.length;}var valid0 = _errs13 === errors;}else {var valid0 = true;}if(valid0){if(data.updateDescription !== undefined){const _errs14 = errors;if(typeof data.updateDescription !== "string"){validate20.errors = [{instancePath:instancePath+"/updateDescription",schemaPath:"#/properties/updateDescription/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs14 === errors;}else {var valid0 = true;}if(valid0){if(data.updateTitle !== undefined){const _errs16 = errors;if(typeof data.updateTitle !== "string"){validate20.errors = [{instancePath:instancePath+"/updateTitle",schemaPath:"#/properties/updateTitle/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs16 === errors;}else {var valid0 = true;}if(valid0){if(data.updateVersion !== undefined){const _errs18 = errors;if(typeof data.updateVersion !== "string"){validate20.errors = [{instancePath:instancePath+"/updateVersion",schemaPath:"#/properties/updateVersion/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs18 === errors;}else {var valid0 = true;}}}}}}}}}}}else {validate20.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate20.errors = vErrors;return errors === 0;}