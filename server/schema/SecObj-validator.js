"use strict";module.exports = validate20;module.exports.default = validate20;const schema22 = {"$schema":"http://json-schema.org/draft-07/schema#","additionalProperties":false,"properties":{"admins":{"additionalProperties":false,"properties":{"names":{"items":{"type":"string"},"type":"array"},"roles":{"items":{"type":"string"},"type":"array"}},"type":"object"},"editors":{"items":{"type":"string"},"type":"array"},"game_admins":{"items":{"type":"string"},"type":"array"},"members":{"additionalProperties":false,"properties":{"names":{"items":{"type":"string"},"type":"array"},"roles":{"items":{"type":"string"},"type":"array"}},"type":"object"},"uploaders":{"items":{"type":"string"},"type":"array"}},"type":"object"};function validate20(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(data && typeof data == "object" && !Array.isArray(data)){for(const key0 in data){if(!(((((key0 === "admins") || (key0 === "editors")) || (key0 === "game_admins")) || (key0 === "members")) || (key0 === "uploaders"))){const err0 = {instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}}if(data.admins !== undefined){let data0 = data.admins;if(data0 && typeof data0 == "object" && !Array.isArray(data0)){for(const key1 in data0){if(!((key1 === "names") || (key1 === "roles"))){const err1 = {instancePath:instancePath+"/admins",schemaPath:"#/properties/admins/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}}if(data0.names !== undefined){let data1 = data0.names;if(Array.isArray(data1)){const len0 = data1.length;for(let i0=0; i0<len0; i0++){if(typeof data1[i0] !== "string"){const err2 = {instancePath:instancePath+"/admins/names/" + i0,schemaPath:"#/properties/admins/properties/names/items/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}}}else {const err3 = {instancePath:instancePath+"/admins/names",schemaPath:"#/properties/admins/properties/names/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;}}if(data0.roles !== undefined){let data3 = data0.roles;if(Array.isArray(data3)){const len1 = data3.length;for(let i1=0; i1<len1; i1++){if(typeof data3[i1] !== "string"){const err4 = {instancePath:instancePath+"/admins/roles/" + i1,schemaPath:"#/properties/admins/properties/roles/items/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err4];}else {vErrors.push(err4);}errors++;}}}else {const err5 = {instancePath:instancePath+"/admins/roles",schemaPath:"#/properties/admins/properties/roles/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err5];}else {vErrors.push(err5);}errors++;}}}else {const err6 = {instancePath:instancePath+"/admins",schemaPath:"#/properties/admins/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err6];}else {vErrors.push(err6);}errors++;}}if(data.editors !== undefined){let data5 = data.editors;if(Array.isArray(data5)){const len2 = data5.length;for(let i2=0; i2<len2; i2++){if(typeof data5[i2] !== "string"){const err7 = {instancePath:instancePath+"/editors/" + i2,schemaPath:"#/properties/editors/items/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err7];}else {vErrors.push(err7);}errors++;}}}else {const err8 = {instancePath:instancePath+"/editors",schemaPath:"#/properties/editors/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err8];}else {vErrors.push(err8);}errors++;}}if(data.game_admins !== undefined){let data7 = data.game_admins;if(Array.isArray(data7)){const len3 = data7.length;for(let i3=0; i3<len3; i3++){if(typeof data7[i3] !== "string"){const err9 = {instancePath:instancePath+"/game_admins/" + i3,schemaPath:"#/properties/game_admins/items/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err9];}else {vErrors.push(err9);}errors++;}}}else {const err10 = {instancePath:instancePath+"/game_admins",schemaPath:"#/properties/game_admins/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err10];}else {vErrors.push(err10);}errors++;}}if(data.members !== undefined){let data9 = data.members;if(data9 && typeof data9 == "object" && !Array.isArray(data9)){for(const key2 in data9){if(!((key2 === "names") || (key2 === "roles"))){const err11 = {instancePath:instancePath+"/members",schemaPath:"#/properties/members/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err11];}else {vErrors.push(err11);}errors++;}}if(data9.names !== undefined){let data10 = data9.names;if(Array.isArray(data10)){const len4 = data10.length;for(let i4=0; i4<len4; i4++){if(typeof data10[i4] !== "string"){const err12 = {instancePath:instancePath+"/members/names/" + i4,schemaPath:"#/properties/members/properties/names/items/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err12];}else {vErrors.push(err12);}errors++;}}}else {const err13 = {instancePath:instancePath+"/members/names",schemaPath:"#/properties/members/properties/names/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err13];}else {vErrors.push(err13);}errors++;}}if(data9.roles !== undefined){let data12 = data9.roles;if(Array.isArray(data12)){const len5 = data12.length;for(let i5=0; i5<len5; i5++){if(typeof data12[i5] !== "string"){const err14 = {instancePath:instancePath+"/members/roles/" + i5,schemaPath:"#/properties/members/properties/roles/items/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err14];}else {vErrors.push(err14);}errors++;}}}else {const err15 = {instancePath:instancePath+"/members/roles",schemaPath:"#/properties/members/properties/roles/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err15];}else {vErrors.push(err15);}errors++;}}}else {const err16 = {instancePath:instancePath+"/members",schemaPath:"#/properties/members/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err16];}else {vErrors.push(err16);}errors++;}}if(data.uploaders !== undefined){let data14 = data.uploaders;if(Array.isArray(data14)){const len6 = data14.length;for(let i6=0; i6<len6; i6++){if(typeof data14[i6] !== "string"){const err17 = {instancePath:instancePath+"/uploaders/" + i6,schemaPath:"#/properties/uploaders/items/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err17];}else {vErrors.push(err17);}errors++;}}}else {const err18 = {instancePath:instancePath+"/uploaders",schemaPath:"#/properties/uploaders/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err18];}else {vErrors.push(err18);}errors++;}}}else {const err19 = {instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err19];}else {vErrors.push(err19);}errors++;}validate20.errors = vErrors;return errors === 0;}